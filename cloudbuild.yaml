steps:
- name: gcr.io/cloud-builders/git
  args: ['clone', 'https://github.com/Jim-Lin/bee-bee-alert.git', '--branch', '$TAG_NAME', '--single-branch']

- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/elasticsearch:6.0.0', '.']
  dir: 'elasticsearch'

- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/api:$TAG_NAME', '.']
  dir: 'api'

# Generate a kubeconfig file for the given GKE cluster.
- name: 'gcr.io/cloud-builders/kubectl'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=asia-east1-b'
    - 'CLOUDSDK_CONTAINER_CLUSTER=bee-bee-alert'
    - 'KUBECONFIG=/kube/config'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      CLUSTER=$$(gcloud config get-value container/cluster)
      PROJECT=$$(gcloud config get-value core/project)
      ZONE=$$(gcloud config get-value compute/zone)

      gcloud container clusters get-credentials "$${CLUSTER}" \
        --project "$${PROJECT}" \
        --zone "$${ZONE}"
  volumes:
    - name: 'kube'
      path: /kube

# Apply the Kubernetes configuration files.
- name: 'gcr.io/cloud-builders/gcloud'
  env:
    - 'KUBECONFIG=/kube/config'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      kubectl apply -f elasticsearch.yaml -f redis.yaml -f api.yaml -f nginx.yaml
  volumes:
    - name: 'kube'
      path: /kube

images:
  - 'gcr.io/$PROJECT_ID/elasticsearch:6.0.0'
  - 'gcr.io/$PROJECT_ID/api:$TAG_NAME'
